{
  "name": "imports-loader",
  "version": "0.7.0",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "imports loader module for webpack",
  "scripts": {
    "test": "mocha",
    "travis": "npm run -s test"
  },
  "dependencies": {
    "loader-utils": "^0.2.16",
    "source-map": "^0.5.6"
  },
  "devDependencies": {
    "mocha": "^3.1.2",
    "should": "^11.1.1"
  },
  "files": [
    "index.js"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/webpack/imports-loader.git"
  },
  "readme": "# imports loader for webpack\n\nThe imports loader allows you to use modules that depend on specific global variables.\n\nThis is useful for third-party modules that rely on global variables like `$` or `this` being the `window` object. The imports loader can add the necessary `require('whatever')` calls, so those modules work with webpack.\n\n## Installation\n\n```\nnpm install imports-loader\n```\n\n## Usage\n\nGiven you have this file `example.js`\n\n```javascript\n$(\"img\").doSomeAwesomeJqueryPluginStuff();\n```\n\nthen you can inject the `$` variable into the module by configuring the imports-loader like this:\n\n``` javascript\nrequire(\"imports-loader?$=jquery!./example.js\");\n```\n\nThis simply prepends `var $ = require(\"jquery\");` to `example.js`.\n\n### Syntax\n\nQuery value | Equals\n------------|-------\n`angular` |Â `var angular = require(\"angular\");`\n`$=jquery` | `var $ = require(\"jquery\");`\n`define=>false` | `var define = false;`\n`config=>{size:50}` | `var config = {size:50};`\n`this=>window` | `(function () { ... }).call(window);`\n\n### Multiple values\n\nMultiple values are separated by comma `,`:\n\n```javascript\nrequire(\"imports-loader?$=jquery,angular,config=>{size:50}!./file.js\");\n```\n\n### webpack.config.js\n\nAs always, you should rather configure this in your `webpack.config.js`:\n\n```javascript\n// ./webpack.config.js\n\nmodule.exports = {\n    ...\n    module: {\n        loaders: [\n            {\n                test: require.resolve(\"some-module\"),\n                loader: \"imports-loader?this=>window\"\n            }\n        ]\n    }\n};\n```\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n## Typical use-cases\n\n### jQuery plugins\n\n`imports-loader?$=jquery`\n\n### Custom Angular modules\n\n`imports-loader?angular`\n\n### Disable AMD\n\nThere are many modules that check for a `define` function before using CommonJS. Since webpack is capable of both, they default to AMD in this case, which can be a problem if the implementation is quirky.\n\nThen you can easily disable the AMD path by writing\n\n```javascript\nimports-loader?define=>false\n```\n\nFor further hints on compatibility issues, check out [Shimming Modules](http://webpack.github.io/docs/shimming-modules.html) of the official docs.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/webpack/imports-loader/issues"
  },
  "_id": "imports-loader@0.7.0",
  "dist": {
    "shasum": "c65973f5b1ad961396216007aca3ef1148073f22"
  },
  "_from": "imports-loader@^0.7.0",
  "_resolved": "https://registry.npmjs.org/imports-loader/-/imports-loader-0.7.0.tgz"
}
